import tkinter as tk

# Dictionary of items with categories as keys
items = {
    "beverages": {
        "Coffee": {"price": 2.50, "quantity": 0},
        "Tea": {"price": 2.00, "quantity": 0},
        "Soda": {"price": 1.50, "quantity": 0}
    },
    "snacks": {
        "Chips": {"price": 1.00, "quantity": 0},
        "Cookies": {"price": 1.25, "quantity": 0},
        "Sandwich": {"price": 3.00, "quantity": 0}
    },
    "desserts": {
        "Cake": {"price": 3.50, "quantity": 0},
        "Ice Cream": {"price": 2.75, "quantity": 0},
        "Pie": {"price": 4.00, "quantity": 0}
    }
}

# Global dictionary to store quantity labels
quantity_labels = {}

# Increment function
def increment(item_type, item_name):
    items[item_type][item_name]["quantity"] += 1
    quantity_labels[item_type][item_name]["text"] = str(items[item_type][item_name]["quantity"])

# Decrement function
def decrement(item_type, item_name):
    if items[item_type][item_name]["quantity"] > 0:
        items[item_type][item_name]["quantity"] -= 1
        quantity_labels[item_type][item_name]["text"] = str(items[item_type][item_name]["quantity"])

# Checkout function
def checkout():
    total_amount = sum(item_info["price"] * item_info["quantity"] for item_type in items.values() for item_info in item_type.values())
    breakdown_window = tk.Toplevel(root)
    breakdown_window.title("Checkout")
    breakdown_window.geometry("300x200")
    
    tk.Label(breakdown_window, text="Item").grid(row=0, column=0, padx=5)
    tk.Label(breakdown_window, text="Quantity").grid(row=0, column=1, padx=5)
    tk.Label(breakdown_window, text="Total Price").grid(row=0, column=2, padx=5)
    
    row = 1
    for item_type, item_dict in items.items():
        for item_name, item_info in item_dict.items():
            quantity = item_info["quantity"]
            if quantity > 0:
                tk.Label(breakdown_window, text=item_name).grid(row=row, column=0, padx=5)
                tk.Label(breakdown_window, text=str(quantity)).grid(row=row, column=1, padx=5)
                tk.Label(breakdown_window, text="${:.2f}".format(item_info["price"] * quantity)).grid(row=row, column=2, padx=5)
                row += 1
    
    tk.Label(breakdown_window, text="Total Amount:").grid(row=row, column=1, pady=5)
    tk.Label(breakdown_window, text="${:.2f}".format(total_amount)).grid(row=row, column=2, padx=5)

# Create tkinter window
root = tk.Tk()
root.title("Item Quantities")

# Function to open the menu page
def open_menu():
    menu_window = tk.Toplevel(root)
    menu_window.title("Menu")
    
    # Create frames for each category
    frames = {}
    for i, category in enumerate(items.keys()):
        frames[category] = tk.LabelFrame(menu_window, text=category.capitalize(), padx=10, pady=10)
        frames[category].grid(row=0, column=i, padx=10, pady=10)

    # Populate frames with items and buttons
    for category, item_dict in items.items():
        frame = frames[category]
        for j, (item_name, item_info) in enumerate(item_dict.items()):
            label = tk.Label(frame, text=f"{item_name}: $ {item_info['price']}")
            label.grid(row=j, column=0, sticky="w")
            
            quantity_label = tk.Label(frame, text=str(item_info["quantity"]))
            quantity_label.grid(row=j, column=1, padx=5)
            quantity_labels.setdefault(category, {})[item_name] = quantity_label
            
            increment_button = tk.Button(frame, text="+", command=lambda ctg=category, iname=item_name: increment(ctg, iname))
            increment_button.grid(row=j, column=2, padx=5)
            
            decrement_button = tk.Button(frame, text="-", command=lambda ctg=category, iname=item_name: decrement(ctg, iname))
            decrement_button.grid(row=j, column=3, padx=5)
    
    # Checkout button on the menu page
    checkout_button = tk.Button(menu_window, text="Checkout", command=checkout)
    checkout_button.grid(row=1, columnspan=len(items), pady=10)

# Button on the root window to open the menu page
open_menu_button = tk.Button(root, text="Open Menu", command=open_menu)
open_menu_button.pack()

root.mainloop()